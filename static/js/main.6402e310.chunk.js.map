{"version":3,"sources":["components/info.js","components/form.js","components/weather.js","App.js","reportWebVitals.js","index.js"],"names":["Info","Form","props","onSubmit","weatherMethod","type","name","placeholder","Weather","className","city","country","description","temp","windspeed","humidity","error","App","state","gettingWeather","e","a","preventDefault","target","elements","value","fetch","api","json","data","main","sys","weather","wind","setState","Math","round","speed","toUpperCase","slice","this","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PASeA,EAPF,kBACT,gCACI,kDACA,iECIOC,EAPF,SAAAC,GAAK,OACd,uBAAMC,SAAUD,EAAME,cAAtB,UACI,uBAAOC,KAAK,OAAOC,KAAK,OAAOC,YAAY,cAC3C,2DCaOC,EAhBC,SAAAN,GAAK,OACjB,sBAAKO,UAAU,YAAf,UACMP,EAAMQ,MACJ,gCACI,2CAAcR,EAAMQ,KAApB,KAA4BR,EAAMS,WAClC,8CAAiBT,EAAMU,eACvB,8CAAiBV,EAAMW,KAAvB,gBACA,6CAAgBX,EAAMY,UAAtB,UACA,2CAAcZ,EAAMa,SAApB,UAGR,mBAAGN,UAAU,QAAb,SAAsBP,EAAMc,YC2ErBC,E,4MAlFdC,MAAQ,CACPL,KAAM,GACNH,KAAM,GACNC,QAAS,GACTG,UAAW,GACXF,YAAa,GACbG,SAAU,GACVC,MAAO,I,EAGRG,e,uCAAiB,WAAOC,GAAP,6BAAAC,EAAA,yDAChBD,EAAEE,mBACIZ,EAAOU,EAAEG,OAAOC,SAASd,KAAKe,OAFpB,0CAKgBC,MAAM,qDAAD,OACkChB,EADlC,yDALrB,cAKIiB,EALJ,gBAOiBA,EAAIC,OAPrB,OAOIC,EAPJ,OAQSC,EAAkCD,EAAlCC,KAAMC,EAA4BF,EAA5BE,IAAKC,EAAuBH,EAAvBG,QAASC,EAAcJ,EAAdI,KAAM3B,EAAQuB,EAARvB,KACjC,EAAK4B,SAAS,CACVrB,KAAMsB,KAAKC,MAAMN,EAAKjB,MACtBH,KAAMJ,EACNK,QAASoB,EAAIpB,QACbG,UAAWqB,KAAKC,MAAMH,EAAKI,OAC3BzB,YACIoB,EAAQ,GAAGpB,YAAY,GAAG0B,cAC1BN,EAAQ,GAAGpB,YAAY2B,MAAM,GACjCxB,SAAUe,EAAKf,SACfC,MAAO,KAlBb,kDAqBF,EAAKkB,SAAS,CACVrB,KAAM,GACNH,KAAM,GACNC,QAAS,GACTG,UAAW,GACXF,YAAa,GACbG,SAAU,GACVC,MAAO,4BA5BT,gCAgCf,EAAKkB,SAAS,CACbrB,KAAM,GACNH,KAAM,GACNC,QAAS,GACTG,UAAW,GACXF,YAAa,GACbG,SAAU,GACVC,MAAO,oBAvCO,0D,6GA4ChB,OACC,qBAAKP,UAAU,UAAf,SACC,qBAAKA,UAAU,OAAf,SACC,qBAAKA,UAAU,YAAf,SACC,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,gBAAf,SACC,cAAC,EAAD,MAED,sBAAKA,UAAU,gBAAf,UACC,cAAC,EAAD,CAAML,cAAeoC,KAAKrB,iBAC1B,cAAC,EAAD,CACCN,KAAM2B,KAAKtB,MAAML,KACjBH,KAAM8B,KAAKtB,MAAMR,KACjBC,QAAS6B,KAAKtB,MAAMP,QACpBG,UAAW0B,KAAKtB,MAAMJ,UACtBF,YAAa4B,KAAKtB,MAAMN,YACxBG,SAAUyB,KAAKtB,MAAMH,SACrBC,MAAOwB,KAAKtB,MAAMF,wB,GAxETyB,IAAMC,WCOTC,G,YAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6402e310.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Info = () => (\r\n    <div>\r\n        <h2>Weather Forecast</h2>\r\n        <p>Check wheather in your city!</p>\r\n    </div>\r\n);\r\n\r\nexport default Info;","import React from 'react'\r\n\r\nconst Form = props => (\r\n    <form onSubmit={props.weatherMethod}>\r\n        <input type=\"text\" name=\"city\" placeholder=\"City name\" />\r\n        <button>Check the weather</button>\r\n    </form>\r\n);\r\n\r\nexport default Form;","import React from 'react'\r\n\r\nconst Weather = props => (\r\n    <div className=\"infoWeath\">\r\n        { props.city &&\r\n            <div>\r\n                <p>Location: {props.city}, {props.country}</p>\r\n                <p>Description: {props.description}</p>\r\n                <p>Temperature: {props.temp}°С</p>\r\n                <p>Wind speed: {props.windspeed} m/s</p>\r\n                <p>Humidity: {props.humidity}%</p>\r\n            </div>\r\n        }\r\n        <p className=\"error\">{props.error}</p>\r\n    </div>\r\n);\r\n\r\n\r\nexport default Weather;","import React from \"react\";\nimport Info from \"./components/info\";\nimport Form from \"./components/form\";\nimport Weather from \"./components/weather\";\n\nclass App extends React.Component {\n\tstate = {\n\t\ttemp: \"\",\n\t\tcity: \"\",\n\t\tcountry: \"\",\n\t\twindspeed: \"\",\n\t\tdescription: \"\",\n\t\thumidity: \"\",\n\t\terror: \"\",\n\t};\n\n\tgettingWeather = async (e) => {\n\t\te.preventDefault();\n\t\tconst city = e.target.elements.city.value;\n\t\tif (city) {\n\t\t\ttry {\n                const api = await fetch(\n                    `HTTPS://api.openweathermap.org/data/2.5/weather?q=${city}&appid=0ceeb6d2cd47c2a59d70272403971e35&units=metric`);\n                const data = await api.json();\n                    const {main, sys, weather, wind, name} = data;\n                    this.setState({\n                        temp: Math.round(main.temp),\n                        city: name,\n                        country: sys.country,\n                        windspeed: Math.round(wind.speed),\n                        description:\n                            weather[0].description[0].toUpperCase() +\n                            weather[0].description.slice(1),\n                        humidity: main.humidity,\n                        error: \"\",\n                    });\n\t\t\t} catch (e) {\n                this.setState({\n                    temp: \"\",\n                    city: \"\",\n                    country: \"\",\n                    windspeed: \"\",\n                    description: \"\",\n                    humidity: \"\",\n                    error: \"Enter correct city name\",\n                });\n\t\t\t}\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\ttemp: \"\",\n\t\t\t\tcity: \"\",\n\t\t\t\tcountry: \"\",\n\t\t\t\twindspeed: \"\",\n\t\t\t\tdescription: \"\",\n\t\t\t\thumidity: \"\",\n\t\t\t\terror: \"Enter city name\",\n\t\t\t});\n\t\t}\n\t};\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"wrapper\">\n\t\t\t\t<div className=\"main\">\n\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t<div className=\"col-sm-5 info\">\n\t\t\t\t\t\t\t\t<Info />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"col-sm-7 form\">\n\t\t\t\t\t\t\t\t<Form weatherMethod={this.gettingWeather} />\n\t\t\t\t\t\t\t\t<Weather\n\t\t\t\t\t\t\t\t\ttemp={this.state.temp}\n\t\t\t\t\t\t\t\t\tcity={this.state.city}\n\t\t\t\t\t\t\t\t\tcountry={this.state.country}\n\t\t\t\t\t\t\t\t\twindspeed={this.state.windspeed}\n\t\t\t\t\t\t\t\t\tdescription={this.state.description}\n\t\t\t\t\t\t\t\t\thumidity={this.state.humidity}\n\t\t\t\t\t\t\t\t\terror={this.state.error}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}